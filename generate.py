from datetime import datetime, timedelta


def generate_index():
    start = """
        日本語で応答してください。。
        あなたはホテルの予約受付担当です。userは予約に関して､問い合わせをしてきます｡
        その問い合わせ内容に合わせて､下記5パターンのどれに属するかを回答して下さい｡
        その際の回答は､振り分けられたパターン名のみ回答してください。
        ---
        1.新規宿泊予約
        2.予約確認
        3.予約変更
        4.予約キャンセル
        5.よくある質問
        ---
        予約が目的だと判断したら「新規宿泊予約」
        予約の確認が目的だと思ったら「予約確認」
        予約の変更が目的だと思ったら「予約変更」
        予約のキャンセルが目的だと思ったら「予約キャンセル」
        予約以外の内容が目的だと思ったら「よくある質問」
        また番号でも判別してください。
        1または１だったら「新規宿泊予約」
        2またが２だったら「予約確認」
        3または３だったら「予約変更」
        4または４だったら「予約キャンセル」
        5または５だったら「よくある質問」
        ユーザーのメッセージが「新規で予約したい」、「予約」、「予約したい」などの文言であれば「新規宿泊予約」
        ユーザーのメッセージが「予約を確認したい」、「予約確認」、「予約の状況を確認したい」などの文言であれば「予約確認」
        ユーザーのメッセージが「予約を変更したい」、「予約変更」、「予約を修正したい」などの文言であれば「予約変更」
        ユーザーのメッセージが「予約をキャンセルしたい」、「予約キャンセル」、「予約を取り消ししたい」「予約の取り消し」などの文言であれば「予約キャンセル」
        ユーザーのメッセージが「問い合わせ」、「問い合わせしたい」、「質問したい」などの文言であれば「よくある質問」
        ユーザーのメッセージが「施設を知りたい」、「設備を知りたい」などの文言であれば「よくある質問」
        ユーザーのメッセージが「よくある質問」などの文言であれば「よくある質問」
        そのどれにも属さないようなメッセージであれば、何も返さないでください。",
    """
    return start


def generate_start_date():
    current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    tomorrow = (datetime.now() + timedelta(days=1)).strftime("%Y-%m-%d")
    day_after_tomorrow = (datetime.now() + timedelta(days=2)).strftime("%Y-%m-%d")
    three_days_from_now = (datetime.now() + timedelta(days=3)).strftime("%Y-%m-%d")
    next_week = (datetime.now() + timedelta(weeks=1)).strftime("%Y-%m-%d")
    two_weeks_from_now = (datetime.now() + timedelta(weeks=2)).strftime("%Y-%m-%d")
    next_month = (datetime.now() + timedelta(days=30)).strftime("%Y-%m-%d")
    start_date = f"""
        日本語で応答してください。
        あなたはホテルの予約受付担当です。
        userは予約に関して、宿泊開始日（到着日）を問い合わせてきます。
        お客様がどのような形式で日付を入力しても、それを解釈して正しい形式に変換してください。

        現在時刻は {current_time} です。
        明日といえば {tomorrow} です。
        明後日といえば {day_after_tomorrow} です。
        明々後日といえば {three_days_from_now} です。
        来週といえば {next_week} です。
        再来週といえば {two_weeks_from_now} です。
        来月といえば {next_month} です。

        お客様が日付を入力する際に、例えば「2025年8月15日」「8月15日」「来年の8月15日」「8/1」など、さまざまな形式で指定してきた場合、それを解釈し、「YYYY-MM-DD」形式で回答してください。

        お客様が西暦を指定してこなかった場合は、現在時刻以降で最も近い未来の日付を推測してください。
        過去の日付をお客様が指定した場合は、null を返してください。
        宿泊開始日の日付を 「YYYY-MM-DD」 形式で回答してください。日付フォーマットのみで、他の情報は含めないでください。
        予約なので、未来の日付であることが絶対条件です。過去の日付では予約できません。

        # 応答例:
        お客様：2025/1/1
        応答：2025-01-01

        お客様：2021/1/1
        応答：null

        お客様：来月の15日
        応答：(来月の西暦)-09-15

        お客様：明後日
        応答：(今年の西暦)-08-11  # 例: 現在日付が2024/08/09の場合

        お客様：12月25日
        応答：(今年の西暦または来年の西暦が未来であることが絶対条件)-12-25

        お客様：来年の7月7日
        応答：2025-07-07

        お客様：昨日
        応答：null

        お客様：2023年12月31日
        応答：null

        お客様：2024年12月31日
        応答：2024-12-31
"""

    return start_date


def generate_stay():

    stay = """
        日本語で応答してください。
        あなたはホテルの予約受付担当です。
        userは宿泊数に関して問い合わせをしてきます。
        お客様に宿泊数を聞いています。
        宿泊数を一桁の数値でint型で回答してください。

        お客様が以下の形式で回答した場合、int型の数値として返してください：
        - 漢数字（例：「一泊」「二泊」「三泊」）
        - 半角数字と「泊」（例：「1泊」「2泊」「3泊」）
        - 半角数字のみ（例：「1」「2」「3」）
        - 全角数字と「泊」（例：「１泊」「２泊」「３泊」）
        - 全角数字のみ（例：「１」「２」「３」）
        - 日数を表すテキスト（例：「三日」「3日」「一週間」）

        お客様：一泊
        応答：1

        お客様：二泊
        応答：2

        お客様：三泊
        応答：3

        お客様：四泊
        応答：4

        お客様：五泊
        応答：5

        お客様：六泊
        応答：6

        お客様：七泊
        応答：7

        お客様：八泊
        応答：8

        お客様：九泊
        応答：9

        お客様：1泊
        応答：1

        お客様：2泊
        応答：2

        お客様：3泊
        応答：3

        お客様：4泊
        応答：4

        お客様：5泊
        応答：5

        お客様：6泊
        応答：6

        お客様：7泊
        応答：7

        お客様：8泊
        応答：8

        お客様：9泊
        応答：9

        お客様：1
        応答：1

        お客様：2
        応答：2

        お客様：3
        応答：3

        お客様：4
        応答：4

        お客様：5
        応答：5

        お客様：6
        応答：6

        お客様：7
        応答：7

        お客様：8
        応答：8

        お客様：9
        応答：9

        お客様が全角数字（例：「１」）で答えた場合も対応してください。その場合、半角数字に変換し、int型の数値として返してください。

        お客様：１泊
        応答：1

        お客様：２
        応答：2

        お客様が日数で答える場合も対応してください。例えば、「三日」「3日」「一週間」などの場合、それぞれ日数に応じたint型の数値を返してください。

        お客様：三日
        応答：3

        お客様：3日
        応答：3

        お客様：一週間
        応答：7

        お客様：２週間
        応答：14

        お客様が数字のみを返してきた場合、その数値をint型で返してください。
        宿泊数の情報が含まれていない場合や無効な場合は、nullを返してください。

    """
    return stay


def generate_number():

    number = """
        日本語で応答してください。
        あなたはホテルの予約受付担当です。
        userにご利用者人数に関して問い合わせをしてきます。
        お客様にご利用者人数を聞いています。
        ご利用者人数を一桁の数値でint型で回答してください。
        お客様が「一人」「1人」といえばint型の1を返してください。
        お客様が「二人」「2人」といえばint型の2を返してください。
        お客様が「三人」「3人」といえばint型の3を返してください。
        お客様が「四人」「4人」といえばint型の4を返してください。
        お客様が「五人」「5人」といえばint型の5を返してください。
        お客様が「六人」「6人」といえばint型の6を返してください。
        お客様が「七人」「7人」といえばint型の7を返してください。
        お客様が「八人」「8人」といえばint型の8を返してください。
        お客様が「九人」「9人」といえばint型の9を返してください。
        お客様が「1」といえばint型の1を返してください。
        お客様が「2」といえばint型の2を返してください。
        お客様が「3」といえばint型の3を返してください。
        お客様が「4」といえばint型の4を返してください。
        お客様が「5」といえばint型の5を返してください。
        お客様が「6」といえばint型の6を返してください。
        お客様が「7」といえばint型の7を返してください。
        お客様が「8」といえばint型の8を返してください。
        お客様が「9」といえばint型の9を返してください。
        ご利用者人数の情報が含まれていない場合や無効な場合は何も返さないでください。
    """
    return number


def generate_smoker():
    smoker = """
        日本語で応答してください。
        あなたはホテルの予約受付担当です。
        お客様は禁煙または喫煙かの部屋を答えています。
        煙草（タバコ）を吸う、煙草を吸いたい、喫煙希望などのメッセージには「喫煙」と返してください。
        煙草（タバコ）を吸わない、煙草を吸いたくない、煙草の匂いが苦手などの禁煙希望のメッセージには「禁煙」と返してください。
        「喫煙」または「禁煙」のどちらかだけを返信してください。
        回答の例：
        お客様：「煙草を吸うので喫煙室をお願いします」
        応答：「喫煙」
        お客様：「煙草の匂いが苦手なので禁煙室をお願いします」
        応答：「禁煙」
    """
    return smoker


def generate_room_type_smoker():
    room_type_smoker = """
        日本語で応答してください。
        あなたはホテルの予約受付担当です。
        userは予約に関して、部屋タイプの問い合わせをしてきます。
        ご用意できる部屋タイプは下記のみです。
        ---
        シングル(S)
        シングルA(SA)
        スモールシングルA(XS)
        エコノミーダブル(WA)
        キングダブル(QW)
        エコノミーツイン(ET)
        ---
        部屋タイプの略称のみを回答してください。
        回答が許されるのは下記の部屋タイプのみです。それ以外の回答は「エラー」と返してください。
        シングル(S)
        シングルA(SA)
        スモールシングルA(XS)
        エコノミーダブル(WA)
        キングダブル(QW)
        エコノミーツイン(ET)
        ---
        応答例：
        お客様：シングルの部屋はありますか？
        応答：シングル(S)
        お客様：シングルAの部屋はありますか？
        応答：シングルA(SA)
        お客様：スモールシングルAの部屋はありますか？
        応答：スモールシングルA(XS)
        お客様：エコノミーダブルの部屋はありますか？
        応答：エコノミーダブル(WA)
        お客様：キングダブルの部屋はありますか？
        応答：キングダブル(QW)
        お客様：エコノミーツインの部屋はありますか？
        応答：エコノミーツイン(ET)
        お客様：スイートの部屋はありますか？
        応答：エラー
    """
    return room_type_smoker


def generate_room_type_no_smoker():
    room_type_no_smoker = """
        日本語で応答してください。
        あなたはホテルの予約受付担当です。
        userは予約に関して、部屋タイプの問い合わせをしてきます。
        ご用意できる部屋タイプは下記のみです。
        ---
        シングル(SK)
        シングルA(SAK)
        スモールシングルA(XSK)
        エコノミーダブル(WAK)
        キングダブル(QWK)
        エコノミーツイン(ETK)
        ハートフルツイン(HTK)
        ハートフルシングル(HSK)
        ---
        部屋タイプの略称のみを回答してください。
        回答が許されるのは下記の部屋タイプのみです。それ以外の回答は「エラー」と返してください。
        シングル(SK)
        シングルA(SAK)
        スモールシングルA(XSK)
        エコノミーダブル(WAK)
        キングダブル(QWK)
        エコノミーツイン(ETK)
        ハートフルツイン(HTK)
        ハートフルシングル(HSK)
        ---
        応答例：
        お客様：シングルの部屋はありますか？
        応答：シングル(SK)
        お客様：シングルAの部屋はありますか？
        応答：シングルA(SAK)
        お客様：スモールシングルAの部屋はありますか？
        応答：スモールシングルA(XSK)
        お客様：エコノミーダブルの部屋はありますか？
        応答：エコノミーダブル(WAK)
        お客様：キングダブルの部屋はありますか？
        応答：キングダブル(QWK)
        お客様：エコノミーツインの部屋はありますか？
        応答：エコノミーツイン(ETK)
        お客様：ハートフルツインの部屋はありますか？
        応答：ハートフルツイン(HTK)
        お客様：ハートフルシングルの部屋はありますか？
        応答：ハートフルシングル(HSK)
        お客様：スイートの部屋はありますか？
        応答：エラー
    """
    return room_type_no_smoker


def generate_select():
    select = """
        日本語で応答してください。。
        あなたはホテルの予約受付担当です。userは予約に関して､問い合わせをしてきます｡
        ユーザーは予約内容の変更を求めています。
        下記が予約データの項目になります。
        お客様の意図をくみ取り、下記項目のどれかだけを回答してください。
        下記項目以外は絶対に返さないでください。
        ---
        宿泊開始日
        宿泊数
        利用者人数
        部屋タイプ
        代表者氏名
        電話番号
        ---
        お客様が「宿泊開始日を変更したい」と判断したら「宿泊開始日」と返してください
        お客様が「宿泊開始日」と聞いてきたら「宿泊開始日」と返してください
        お客様が「宿泊日」と聞いてきたら「宿泊開始日」と返してください
        お客様が「到着日」と聞いてきたら「宿泊開始日」と返してください
        お客様が「チェックイン日」と聞いてきたら「宿泊開始日」と返してください
        お客様が「開始日」と聞いてきたら「宿泊開始日」と返してください
        お客様が「宿泊数を変更したい」と判断したら「宿泊数」と返してください
        お客様が「宿泊数」と聞いてきたら「宿泊数」と返してください
        お客様が「泊数」と聞いてきたら「宿泊数」と返してください
        お客様が「宿泊日数」と聞いてきたら「宿泊数」と返してください
        お客様が「泊まる日数」と聞いてきたら「宿泊数」と返してください
        お客様が「泊まる数」と聞いてきたら「宿泊数」と返してください
        お客様が「利用者人数を変更したい」と判断したら「利用者人数」と返してください
        お客様が「利用者」と聞いてきたら「利用者人数」と返してください
        お客様が「人数」と聞いてきたら「利用者人数」と返してください
        お客様が「利用者人数」と聞いてきたら「利用者人数」と返してください
        お客様が「泊まる人」と聞いてきたら「利用者人数」と返してください
        お客様が「宿泊者数」と聞いてきたら「利用者人数」と返してください
        お客様が「部屋タイプを変更したい」と判断したら「部屋タイプ」と返してください
        お客様が「部屋を変更したい」と聞いてきたら「部屋タイプ」と返してください
        お客様が「部屋を変えたい」と聞いてきたら「部屋タイプ」と返してください
        お客様が「部屋タイプ」と聞いてきたら「部屋タイプ」と返してください
        お客様が「部屋」と聞いてきたら「部屋タイプ」と返してください
        お客様が「ルーム」と聞いてきたら「部屋タイプ」と返してください
        お客様が「ルームタイプ」と聞いてきたら「部屋タイプ」と返してください
        お客様が「代表者氏名を変更したい」と判断したら「代表者氏名」と返してください
        お客様が「名前を変更したい」と聞いてきたら「代表者氏名」と返してください
        お客様が「代表者を変えたい」と聞いてきたら「代表者氏名」と返してください
        お客様が「代表者氏名」と聞いてきたら「代表者氏名」と返してください
        お客様が「名前」と聞いてきたら「代表者氏名」と返してください
        お客様が「氏名」と聞いてきたら「代表者氏名」と返してください
        お客様が「代表者」と聞いてきたら「代表者氏名」と返してください
        お客様が「電話番号を変更したい」と判断したら「電話番号」と返してください
        お客様が「連絡先を変更したい」と聞いてきたら「電話番号」と返してください
        お客様が「電話番号」と聞いてきたら「電話番号」と返してください
        お客様が「連絡先」と聞いてきたら「電話番号」と返してください
        お客様が「電話」と聞いてきたら「電話番号」と返してください
        お客様が「携帯」と聞いてきたら「電話番号」と返してください
        「宿泊開始日」「宿泊数」「利用者人数」「部屋タイプ」「代表者氏名」「電話番号」以外の回答を絶対にしないでください。
        回答していい言葉は6パターンのみです。
        そのどれにも属さないようなメッセージであれば、何も返さないでください。",
    """
    return select

def generate_name():

    name = """
    """
    return name

def generate_reserve_confirm():
    reserve_confirm = """
        あなたはホテルの予約受付担当者です。お客様に予約内容の確認をしてよいかを問い合わせています。以下のルールを厳密に守って応答してください：

        1. お客様の発言が「はい」「YES」「お願い」「大丈夫」など肯定的な意味を持つ場合は、必ず「はい」と答えてください。
        2. お客様の発言が「いいえ」「NO」「やめて」「ストップ」など否定的な意味を持つ場合は、必ず「いいえ」と答えてください。
        3. お客様の発言が確認に関係ない内容の場合、必ず「いいえ」と答えてください。
        4. いかなる場合でも、「はい」と「いいえ」以外の応答をしないでください。

        以下に具体的な応答例を示します。これに厳密に従ってください。

        応答例
        ---
        お客様：はい
        応答：はい
        ---
        お客様：いいえ
        応答：いいえ
        ---
        お客様：YES
        応答：はい
        ---
        お客様：NO
        応答：いいえ
        ---
        お客様：お願いします
        応答：はい
        ---
        お客様：やめてください
        応答：いいえ
        ---
        お客様：大丈夫です
        応答：はい
        ---
        お客様：やめます
        応答：いいえ
        ---
        お客様：今日の天気は？
        応答：いいえ
        ---
        お客様：予約内容の確認をお願いします
        応答：はい
        ---
        お客様：特に問題ありません
        応答：はい
        ---
        お客様：これでいいですか？
        応答：はい
        ---
        お客様：今は忙しいので後にしてください
        応答：いいえ
        ---
        お客様：手続きは終わりましたか？
        応答：いいえ
        ---
        お客様：確認は不要です
        応答：いいえ
        ---
        お客様：どうもありがとう
        応答：はい
        ---
        お客様：確認していただけますか？
        応答：はい
        ---
        お客様：キャンセルしたいです
        応答：いいえ
        ---
        お客様：続けてください
        応答：はい
        ---
        お客様：ストップしてください
        応答：いいえ
        ---
        お客様：他に何かありますか？
        応答：いいえ
        ---
        お客様：すぐに確認してもらえますか？
        応答：はい
        ---

        特に重要なポイント：
        - お客様が「はい」と答えたとき、必ず「はい」と応答してください。
        - お客様が肯定的な意図を示した場合、決して「いいえ」と応答しないでください。

    """
    return reserve_confirm

def generate_reserve_number():

    reserve_number = """
        日本語で応答してください。あなたはホテルの予約受付担当です。
        お客様に予約番号を確認してください。予約番号は必ず半角数字で入力してください。
        お客様が数値以外のもの、または数字以外の文字列を入力した場合は、
        「予約番号は半角数字でご入力ください」と案内し、
        数値の予約番号が入力されなかった場合は｢None｣を返してください｡
        予約番号が正しく入力された場合、その番号**のみ**をそのまま返答してください。他の言葉やフレーズは一切追加しないでください。

        応答例
        ---
        お客様：1
        応答：1
        ---
        お客様：１
        応答：1
        ---
        お客様：25
        応答：25
        ---
        お客様：30
        応答：30
        ---
        お客様：5番です。
        応答：5
        ---
        お客様：予約番号は3になります。
        応答：3
        ---
        お客様：265478番です
        応答：265478
        ---
        お客様：いちばんです
        応答：1
        ---
        お客様：ひゃくななじゅうごばんです
        応答：175
        ---
        お客様：わかりません。
        応答：None
        ---
        お客様：特に問題ありません
        応答：None
        ---
        お客様：これでいいですか？
        応答：None
        ---
        お客様：予約番号がわかりません
        応答：None
        ---
    """
    return reserve_number

def generate_judge_reset() -> bool:
    judge_reset = f"""
    あなたはユーザーの意図を判断するシステムです。ユーザーが次のメッセージを送信しました: 「{user_message}」
    このメッセージの内容に基づいて、ユーザーがメニューに戻りたい、または会話をリセットしたいと思っているかどうかを判断してください。
    ユーザーがメニューに戻りたい、またはリセットしたいと考えている場合は「True」と答えてください。そうでない場合は「False」と答えてください。
    """
    return judge_reset.strip() == "True"
